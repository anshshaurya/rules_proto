load("@io_bazel_rules_go//go:def.bzl", "go_test")
load("//rules:example.bzl", "gazelle_testdata_example")

# gazelle:exclude testdata
# gazelle:ignore gazelle_testdata_example_test_helper.go

HELPER_UTILS = """
import (
    "os"
    "log"
    "path/filepath"
    "io/ioutil"
)

func listBuildFiles(dir string) error {
	return filepath.Walk(dir, func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}
        if filepath.Base(path) != "BUILD" {
            return nil
        } 
		log.Println("---", path, "---")
        data, err := ioutil.ReadFile(filepath.Join(dir, path))
        if err != nil {
            log.Fatal(err)
        }
        log.Println(string(data))
        return nil
	})
}
"""

genrule(
    name = "gazelle_tool",
    outs = ["gazelle"],
    cmd = "cp $(location //:gazelle-protobuf) $@",
    executable = True,
    tools = ["//:gazelle-protobuf"],
)

go_test(
    name = "golden_test",
    srcs = ["golden_test.go"],
    data = [":gazelle"] + glob(["testdata/**"]),
    deps = ["//pkg/goldentest"],
)

# gazelle_testdata_example(
#     name = "builtins",
#     srcs = glob(["testdata/builtins/*"]),
# )

gazelle_testdata_example(
    name = "cpp",
    srcs = glob(["testdata/cpp/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "java",
    srcs = glob(["testdata/java/*"]),
    # TODO: investigate java does not PASS with the prebuilt toolchain protoc.
    # Perhaps the version is too old?
    workspace_template = "builtin.WORKSPACE",
)

gazelle_testdata_example(
    name = "python",
    srcs = glob(["testdata/python/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "ruby",
    srcs = glob(["testdata/ruby/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "csharp",
    srcs = glob(["testdata/csharp/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "objc",
    srcs = glob(["testdata/objc/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "commonjs",
    srcs = glob(["testdata/commonjs/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "closurejs",
    srcs = glob(["testdata/closurejs/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "gogo",
    srcs = glob(["testdata/gogo/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "go",
    srcs = glob(["testdata/go/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "gomerge",
    srcs = glob(["testdata/gomerge/*"]),
    workspace_template = "prebuilt.WORKSPACE",
)

gazelle_testdata_example(
    name = "goembed",
    srcs = glob(["testdata/goembed/**/*"]),
    strip_prefix = "example/golden/testdata/goembed",
    workspace_template = "builtin.WORKSPACE",
)

gazelle_testdata_example(
    name = "proto_repository",
    srcs = glob(["testdata/proto_repository/**/*"]),
    extra_test_content = """
func TestRunGazelle(t *testing.T) {
	if err := bazel_testing.RunBazel("run", "//:gazelle"); err != nil {
		t.Fatal(err)
	}
    listBuildFiles(".")
	if err := bazel_testing.RunBazel("build", "..."); err != nil {
		t.Fatal(err)
	}
}
""",
    extra_test_helper = HELPER_UTILS,
    strip_prefix = "example/golden/testdata/proto_repository",
    workspace_template = "prebuilt.WORKSPACE",
)

filegroup(
    name = "all_files",
    srcs = ["BUILD.bazel"] + glob(["*.go"]),
    visibility = ["//:__pkg__"],
)
